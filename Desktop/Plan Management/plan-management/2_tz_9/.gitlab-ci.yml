stages:

  - mavenbuild
  - maventest
  - mavenDeploy
  - androidbuild
  - androidtry

maven-build: 
  stage: mavenbuild
  tags:
    - mainRunner
  script:
    - cd Backend/Calendar
    - mvn package -D skipTests=True
      #- mvn package
  only:
    refs:
      - main
    changes:
      - Backend/**/*


maven-test:
  stage: maventest
  tags:
   - mainRunner
  script:
   - cd Backend/Calendar
   - mvn test -D skipTests=true
  artifacts:
    paths:
     - Backend/Calendar/target/*.jar
  only:
    refs:
      - main
    changes:
      - Backend/**/*

autoDeploy:
  stage: mavenDeploy
  tags:
    - mainRunner
  script:
    - cd Backend/Calendar
    - mvn package -D skipTests=true
    - sudo mv target/*.jar /target/web-demo.jar
    - sudo systemctl stop system-web-demo
    - sudo systemctl start system-web-demo
  only:
    refs:
      - main
    changes:
      - Backend/**/*


android-build: #this is another job
  image:  gjandres/android-ci:latest      		# this is a directive to DOCKER
  stage: androidbuild
  tags:
   - test_tag        					#this is LINK to the docker runner on the remote-server        
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/gradlew			#change directory to where you have ‘gradlew’ in your android directory
  script:
    - cd Frontend					#change directory to where you have your android application
    - ./gradlew assemble
  only:
    refs:
      - main
    changes:
      - Frontend/**/*

android-test:
  image: gjandres/android-ci:latest
  stage: androidtry
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/gradlew
  tags:
   - test_tag
  script:
    - cd Frontend
    - ./gradlew test
  only:
    refs:
      - main
    changes:
      - Frontend/**/*

